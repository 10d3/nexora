model Category {
    id          String     @id @default(cuid())
    name        String
    description String?
    tenantId    String
    tenant      Tenant     @relation(fields: [tenantId], references: [id], onDelete: Cascade)
    products    Product[]
    menuItems   MenuItem[]
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt

    @@index([tenantId])
    @@index([name])
}

model Order {
    id          String      @id @default(cuid())
    orderNumber String      @unique
    status      OrderStatus @default(PENDING)
    total       Float
    tax         Float       @default(0)
    discount    Float       @default(0)
    paymentType PaymentType @default(CASH)
    orderType   OrderType   @default(STANDARD)

    // Restaurant specific
    tableId       String?
    table         Table?       @relation(fields: [tableId], references: [id])
    reservationId String?
    reservation   Reservation? @relation(fields: [reservationId], references: [id])

    // Hotel specific
    roomId    String?
    room      Room?    @relation(fields: [roomId], references: [id])
    bookingId String?
    booking   Booking? @relation(fields: [bookingId], references: [id])

    // Salon/Spa specific
    appointmentId String?
    appointment   Appointment? @relation(fields: [appointmentId], references: [id])

    // Universal relationships
    userId            String
    user              User               @relation(fields: [userId], references: [id])
    tenantId          String
    tenant            Tenant             @relation(fields: [tenantId], references: [id], onDelete: Cascade)
    orderItems        OrderItem[]
    delivery          Delivery?
    creditTransaction CreditTransaction?
    refunds           Refund[]

    // Customer relationship
    customerProfileId String?
    customerProfile   CustomerProfile? @relation(fields: [customerProfileId], references: [id])

    // Timestamps and tracking
    createdAt       DateTime  @default(now())
    updatedAt       DateTime  @updatedAt
    completedAt     DateTime?
    completedBy     String?
    completedReason String?
    deletedBy       String?
    deletedAt       DateTime?

    // Indexes for all relationships and commonly queried fields
    @@index([tenantId])
    @@index([userId])
    @@index([customerProfileId])
    @@index([tableId])
    @@index([reservationId])
    @@index([roomId])
    @@index([bookingId])
    @@index([appointmentId])
    @@index([status])
    @@index([orderType])
    @@index([orderNumber])
    @@index([createdAt])
    @@index([completedAt])
    @@index([completedBy])
}

model OrderItem {
    id        String   @id @default(cuid())
    quantity  Int
    price     Float
    notes     String?
    productId String
    product   Product  @relation(fields: [productId], references: [id])
    orderId   String
    order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([productId])
    @@index([orderId])
}
